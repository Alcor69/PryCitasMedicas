/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package vista.medicos;

import controlador.EspecialidadControlador;
import controlador.MedicoControlador;
import javax.swing.JOptionPane;
import modelo.EspecialidadModelo;
import modelo.MedicoModelo;

/**
 *
 * @author rb940
 */
public class Ingresar extends javax.swing.JInternalFrame {
    
    EspecialidadControlador ec = EspecialidadControlador.getInstancia();
   
    public Ingresar() {
        initComponents();
        for (EspecialidadModelo em  : ec.listado()) {
           cbx_especialidades.addItem(em.getNombre());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txt_cedula = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txt_Nombres = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txt_edad = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        cbx_sexo = new javax.swing.JComboBox<>();
        bttn_guardar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        cbx_especialidades = new javax.swing.JComboBox<>();

        setBackground(new java.awt.Color(102, 153, 255));

        jLabel1.setText("Cedula");

        jLabel2.setText("Nombres y Apellidos");

        jLabel3.setText("Edad");

        jLabel4.setText("Sexo");

        cbx_sexo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hombre", "Mujer" }));

        bttn_guardar.setText("Guardar");
        bttn_guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttn_guardarActionPerformed(evt);
            }
        });

        jLabel5.setText("Especialidades");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel4))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(cbx_sexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(txt_edad, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txt_Nombres, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txt_cedula, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(bttn_guardar, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel5)
                        .addGap(43, 43, 43)
                        .addComponent(cbx_especialidades, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_cedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_Nombres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_edad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbx_sexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cbx_especialidades, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addComponent(bttn_guardar)
                .addGap(22, 22, 22))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bttn_guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttn_guardarActionPerformed
    String cedula = txt_cedula.getText();
    String nombre = txt_Nombres.getText();
    String edadStr = txt_edad.getText();
    String nombreEspecialidad = cbx_especialidades.getSelectedItem().toString();
    
    // Validar si los campos están vacíos
    if (cedula.isEmpty() || nombre.isEmpty() || edadStr.isEmpty() || nombreEspecialidad.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Todos los campos deben ser completados.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Convertir la edad
    int edad = 0;
    try {
        edad = Integer.parseInt(edadStr);
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Por favor, ingrese una edad válida.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }
    
    // Validar si la cédula ya está registrada
    MedicoControlador mc = MedicoControlador.getInstancia();
    if (mc.obtenerCedula(cedula) != null) {
        JOptionPane.showMessageDialog(this, "La cédula ya está registrada. Por favor, ingrese una cédula válida.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Verificar el sexo seleccionado
    boolean sexo = cbx_sexo.getSelectedItem().toString().equals("Hombre");

    // Obtener la especialidad
    EspecialidadModelo em_nombre = ec.obtenerPorNombre(nombreEspecialidad);

    if (em_nombre == null) {
        JOptionPane.showMessageDialog(this, "La especialidad seleccionada no es válida.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Guardar el médico
    MedicoModelo mm = mc.guardar(em_nombre, cedula, nombre, edad, sexo);

    // Confirmación de éxito
    JOptionPane.showMessageDialog(this, mm.getNombres() + " ingresado correctamente", "Éxito", JOptionPane.INFORMATION_MESSAGE);

    // Limpiar campos
    txt_cedula.setText("");
    txt_Nombres.setText("");
    txt_edad.setText("");
    cbx_especialidades.setSelectedIndex(0);
    }//GEN-LAST:event_bttn_guardarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bttn_guardar;
    private javax.swing.JComboBox<String> cbx_especialidades;
    private javax.swing.JComboBox<String> cbx_sexo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField txt_Nombres;
    private javax.swing.JTextField txt_cedula;
    private javax.swing.JTextField txt_edad;
    // End of variables declaration//GEN-END:variables
}
